#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalOtomation")]
	public partial class HospitalDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertPastExamine(PastExamine instance);
    partial void UpdatePastExamine(PastExamine instance);
    partial void DeletePastExamine(PastExamine instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    #endregion
		
		public HospitalDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HospitalOtomationConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<PastExamine> PastExamines
		{
			get
			{
				return this.GetTable<PastExamine>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dp_ID;
		
		private string _dp_Name;
		
		private string _dp_Aciklama;
		
		private EntitySet<Doctor> _Doctors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondp_IDChanging(int value);
    partial void Ondp_IDChanged();
    partial void Ondp_NameChanging(string value);
    partial void Ondp_NameChanged();
    partial void Ondp_AciklamaChanging(string value);
    partial void Ondp_AciklamaChanged();
    #endregion
		
		public Department()
		{
			this._Doctors = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctors), new Action<Doctor>(this.detach_Doctors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dp_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dp_ID
		{
			get
			{
				return this._dp_ID;
			}
			set
			{
				if ((this._dp_ID != value))
				{
					this.Ondp_IDChanging(value);
					this.SendPropertyChanging();
					this._dp_ID = value;
					this.SendPropertyChanged("dp_ID");
					this.Ondp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dp_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string dp_Name
		{
			get
			{
				return this._dp_Name;
			}
			set
			{
				if ((this._dp_Name != value))
				{
					this.Ondp_NameChanging(value);
					this.SendPropertyChanging();
					this._dp_Name = value;
					this.SendPropertyChanged("dp_Name");
					this.Ondp_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dp_Aciklama", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dp_Aciklama
		{
			get
			{
				return this._dp_Aciklama;
			}
			set
			{
				if ((this._dp_Aciklama != value))
				{
					this.Ondp_AciklamaChanging(value);
					this.SendPropertyChanging();
					this._dp_Aciklama = value;
					this.SendPropertyChanged("dp_Aciklama");
					this.Ondp_AciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Doctor", Storage="_Doctors", ThisKey="dp_ID", OtherKey="dp_ID")]
		public EntitySet<Doctor> Doctors
		{
			get
			{
				return this._Doctors;
			}
			set
			{
				this._Doctors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctors(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Doctors(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctors")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dt_ID;
		
		private string _dt_TC;
		
		private string _dt_Password;
		
		private string _dt_NameSurname;
		
		private string _dt_Adres;
		
		private string _dt_Tel;
		
		private string _dt_Cinsiyet;
		
		private System.DateTime _dt_Dog_Tarih;
		
		private System.DateTime _dt_Baslangic_Tarih;
		
		private string _dt_ResimUrl;
		
		private int _dp_ID;
		
		private EntitySet<PastExamine> _PastExamines;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondt_IDChanging(int value);
    partial void Ondt_IDChanged();
    partial void Ondt_TCChanging(string value);
    partial void Ondt_TCChanged();
    partial void Ondt_PasswordChanging(string value);
    partial void Ondt_PasswordChanged();
    partial void Ondt_NameSurnameChanging(string value);
    partial void Ondt_NameSurnameChanged();
    partial void Ondt_AdresChanging(string value);
    partial void Ondt_AdresChanged();
    partial void Ondt_TelChanging(string value);
    partial void Ondt_TelChanged();
    partial void Ondt_CinsiyetChanging(string value);
    partial void Ondt_CinsiyetChanged();
    partial void Ondt_Dog_TarihChanging(System.DateTime value);
    partial void Ondt_Dog_TarihChanged();
    partial void Ondt_Baslangic_TarihChanging(System.DateTime value);
    partial void Ondt_Baslangic_TarihChanged();
    partial void Ondt_ResimUrlChanging(string value);
    partial void Ondt_ResimUrlChanged();
    partial void Ondp_IDChanging(int value);
    partial void Ondp_IDChanged();
    #endregion
		
		public Doctor()
		{
			this._PastExamines = new EntitySet<PastExamine>(new Action<PastExamine>(this.attach_PastExamines), new Action<PastExamine>(this.detach_PastExamines));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dt_ID
		{
			get
			{
				return this._dt_ID;
			}
			set
			{
				if ((this._dt_ID != value))
				{
					this.Ondt_IDChanging(value);
					this.SendPropertyChanging();
					this._dt_ID = value;
					this.SendPropertyChanged("dt_ID");
					this.Ondt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_TC", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string dt_TC
		{
			get
			{
				return this._dt_TC;
			}
			set
			{
				if ((this._dt_TC != value))
				{
					this.Ondt_TCChanging(value);
					this.SendPropertyChanging();
					this._dt_TC = value;
					this.SendPropertyChanged("dt_TC");
					this.Ondt_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Password", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dt_Password
		{
			get
			{
				return this._dt_Password;
			}
			set
			{
				if ((this._dt_Password != value))
				{
					this.Ondt_PasswordChanging(value);
					this.SendPropertyChanging();
					this._dt_Password = value;
					this.SendPropertyChanged("dt_Password");
					this.Ondt_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_NameSurname", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string dt_NameSurname
		{
			get
			{
				return this._dt_NameSurname;
			}
			set
			{
				if ((this._dt_NameSurname != value))
				{
					this.Ondt_NameSurnameChanging(value);
					this.SendPropertyChanging();
					this._dt_NameSurname = value;
					this.SendPropertyChanged("dt_NameSurname");
					this.Ondt_NameSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Adres", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string dt_Adres
		{
			get
			{
				return this._dt_Adres;
			}
			set
			{
				if ((this._dt_Adres != value))
				{
					this.Ondt_AdresChanging(value);
					this.SendPropertyChanging();
					this._dt_Adres = value;
					this.SendPropertyChanged("dt_Adres");
					this.Ondt_AdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Tel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string dt_Tel
		{
			get
			{
				return this._dt_Tel;
			}
			set
			{
				if ((this._dt_Tel != value))
				{
					this.Ondt_TelChanging(value);
					this.SendPropertyChanging();
					this._dt_Tel = value;
					this.SendPropertyChanged("dt_Tel");
					this.Ondt_TelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Cinsiyet", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string dt_Cinsiyet
		{
			get
			{
				return this._dt_Cinsiyet;
			}
			set
			{
				if ((this._dt_Cinsiyet != value))
				{
					this.Ondt_CinsiyetChanging(value);
					this.SendPropertyChanging();
					this._dt_Cinsiyet = value;
					this.SendPropertyChanged("dt_Cinsiyet");
					this.Ondt_CinsiyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Dog_Tarih", DbType="Date NOT NULL")]
		public System.DateTime dt_Dog_Tarih
		{
			get
			{
				return this._dt_Dog_Tarih;
			}
			set
			{
				if ((this._dt_Dog_Tarih != value))
				{
					this.Ondt_Dog_TarihChanging(value);
					this.SendPropertyChanging();
					this._dt_Dog_Tarih = value;
					this.SendPropertyChanged("dt_Dog_Tarih");
					this.Ondt_Dog_TarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_Baslangic_Tarih", DbType="Date NOT NULL")]
		public System.DateTime dt_Baslangic_Tarih
		{
			get
			{
				return this._dt_Baslangic_Tarih;
			}
			set
			{
				if ((this._dt_Baslangic_Tarih != value))
				{
					this.Ondt_Baslangic_TarihChanging(value);
					this.SendPropertyChanging();
					this._dt_Baslangic_Tarih = value;
					this.SendPropertyChanged("dt_Baslangic_Tarih");
					this.Ondt_Baslangic_TarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_ResimUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string dt_ResimUrl
		{
			get
			{
				return this._dt_ResimUrl;
			}
			set
			{
				if ((this._dt_ResimUrl != value))
				{
					this.Ondt_ResimUrlChanging(value);
					this.SendPropertyChanging();
					this._dt_ResimUrl = value;
					this.SendPropertyChanged("dt_ResimUrl");
					this.Ondt_ResimUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dp_ID", DbType="Int NOT NULL")]
		public int dp_ID
		{
			get
			{
				return this._dp_ID;
			}
			set
			{
				if ((this._dp_ID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondp_IDChanging(value);
					this.SendPropertyChanging();
					this._dp_ID = value;
					this.SendPropertyChanged("dp_ID");
					this.Ondp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_PastExamine", Storage="_PastExamines", ThisKey="dt_ID", OtherKey="dt_ID")]
		public EntitySet<PastExamine> PastExamines
		{
			get
			{
				return this._PastExamines;
			}
			set
			{
				this._PastExamines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Doctor", Storage="_Department", ThisKey="dp_ID", OtherKey="dp_ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Doctors.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Doctors.Add(this);
						this._dp_ID = value.dp_ID;
					}
					else
					{
						this._dp_ID = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PastExamines(PastExamine entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_PastExamines(PastExamine entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PastExamine")]
	public partial class PastExamine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ex_ID;
		
		private string _ex_Aciklama;
		
		private string _ex_Sonuc;
		
		private System.DateTime _ex_Tarih;
		
		private decimal _ex_Ucret;
		
		private int _pt_ID;
		
		private int _dt_ID;
		
		private EntityRef<Doctor> _Doctor;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onex_IDChanging(int value);
    partial void Onex_IDChanged();
    partial void Onex_AciklamaChanging(string value);
    partial void Onex_AciklamaChanged();
    partial void Onex_SonucChanging(string value);
    partial void Onex_SonucChanged();
    partial void Onex_TarihChanging(System.DateTime value);
    partial void Onex_TarihChanged();
    partial void Onex_UcretChanging(decimal value);
    partial void Onex_UcretChanged();
    partial void Onpt_IDChanging(int value);
    partial void Onpt_IDChanged();
    partial void Ondt_IDChanging(int value);
    partial void Ondt_IDChanged();
    #endregion
		
		public PastExamine()
		{
			this._Doctor = default(EntityRef<Doctor>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ex_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ex_ID
		{
			get
			{
				return this._ex_ID;
			}
			set
			{
				if ((this._ex_ID != value))
				{
					this.Onex_IDChanging(value);
					this.SendPropertyChanging();
					this._ex_ID = value;
					this.SendPropertyChanged("ex_ID");
					this.Onex_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ex_Aciklama", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string ex_Aciklama
		{
			get
			{
				return this._ex_Aciklama;
			}
			set
			{
				if ((this._ex_Aciklama != value))
				{
					this.Onex_AciklamaChanging(value);
					this.SendPropertyChanging();
					this._ex_Aciklama = value;
					this.SendPropertyChanged("ex_Aciklama");
					this.Onex_AciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ex_Sonuc", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string ex_Sonuc
		{
			get
			{
				return this._ex_Sonuc;
			}
			set
			{
				if ((this._ex_Sonuc != value))
				{
					this.Onex_SonucChanging(value);
					this.SendPropertyChanging();
					this._ex_Sonuc = value;
					this.SendPropertyChanged("ex_Sonuc");
					this.Onex_SonucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ex_Tarih", DbType="Date NOT NULL")]
		public System.DateTime ex_Tarih
		{
			get
			{
				return this._ex_Tarih;
			}
			set
			{
				if ((this._ex_Tarih != value))
				{
					this.Onex_TarihChanging(value);
					this.SendPropertyChanging();
					this._ex_Tarih = value;
					this.SendPropertyChanged("ex_Tarih");
					this.Onex_TarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ex_Ucret", DbType="Money NOT NULL")]
		public decimal ex_Ucret
		{
			get
			{
				return this._ex_Ucret;
			}
			set
			{
				if ((this._ex_Ucret != value))
				{
					this.Onex_UcretChanging(value);
					this.SendPropertyChanging();
					this._ex_Ucret = value;
					this.SendPropertyChanged("ex_Ucret");
					this.Onex_UcretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_ID", DbType="Int NOT NULL")]
		public int pt_ID
		{
			get
			{
				return this._pt_ID;
			}
			set
			{
				if ((this._pt_ID != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpt_IDChanging(value);
					this.SendPropertyChanging();
					this._pt_ID = value;
					this.SendPropertyChanged("pt_ID");
					this.Onpt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_ID", DbType="Int NOT NULL")]
		public int dt_ID
		{
			get
			{
				return this._dt_ID;
			}
			set
			{
				if ((this._dt_ID != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondt_IDChanging(value);
					this.SendPropertyChanging();
					this._dt_ID = value;
					this.SendPropertyChanged("dt_ID");
					this.Ondt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Doctor_PastExamine", Storage="_Doctor", ThisKey="dt_ID", OtherKey="dt_ID", IsForeignKey=true)]
		public Doctor Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				Doctor previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.PastExamines.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.PastExamines.Add(this);
						this._dt_ID = value.dt_ID;
					}
					else
					{
						this._dt_ID = default(int);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PastExamine", Storage="_Patient", ThisKey="pt_ID", OtherKey="pt_ID", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.PastExamines.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.PastExamines.Add(this);
						this._pt_ID = value.pt_ID;
					}
					else
					{
						this._pt_ID = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patients")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pt_ID;
		
		private string _pt_TC;
		
		private string _pt_Password;
		
		private string _pt_NameSurname;
		
		private string _pt_Adres;
		
		private string _pt_Tel;
		
		private string _pt_Cinsiyet;
		
		private System.DateTime _pt_Dog_Tarih;
		
		private string _pt_AnneAdi;
		
		private string _pt_BabaAdi;
		
		private string _pt_KanGrubu;
		
		private string _pt_Meslek;
		
		private string _pt_SigortaTuru;
		
		private string _pt_ResimUrl;
		
		private EntitySet<PastExamine> _PastExamines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpt_IDChanging(int value);
    partial void Onpt_IDChanged();
    partial void Onpt_TCChanging(string value);
    partial void Onpt_TCChanged();
    partial void Onpt_PasswordChanging(string value);
    partial void Onpt_PasswordChanged();
    partial void Onpt_NameSurnameChanging(string value);
    partial void Onpt_NameSurnameChanged();
    partial void Onpt_AdresChanging(string value);
    partial void Onpt_AdresChanged();
    partial void Onpt_TelChanging(string value);
    partial void Onpt_TelChanged();
    partial void Onpt_CinsiyetChanging(string value);
    partial void Onpt_CinsiyetChanged();
    partial void Onpt_Dog_TarihChanging(System.DateTime value);
    partial void Onpt_Dog_TarihChanged();
    partial void Onpt_AnneAdiChanging(string value);
    partial void Onpt_AnneAdiChanged();
    partial void Onpt_BabaAdiChanging(string value);
    partial void Onpt_BabaAdiChanged();
    partial void Onpt_KanGrubuChanging(string value);
    partial void Onpt_KanGrubuChanged();
    partial void Onpt_MeslekChanging(string value);
    partial void Onpt_MeslekChanged();
    partial void Onpt_SigortaTuruChanging(string value);
    partial void Onpt_SigortaTuruChanged();
    partial void Onpt_ResimUrlChanging(string value);
    partial void Onpt_ResimUrlChanged();
    #endregion
		
		public Patient()
		{
			this._PastExamines = new EntitySet<PastExamine>(new Action<PastExamine>(this.attach_PastExamines), new Action<PastExamine>(this.detach_PastExamines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pt_ID
		{
			get
			{
				return this._pt_ID;
			}
			set
			{
				if ((this._pt_ID != value))
				{
					this.Onpt_IDChanging(value);
					this.SendPropertyChanging();
					this._pt_ID = value;
					this.SendPropertyChanged("pt_ID");
					this.Onpt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_TC", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string pt_TC
		{
			get
			{
				return this._pt_TC;
			}
			set
			{
				if ((this._pt_TC != value))
				{
					this.Onpt_TCChanging(value);
					this.SendPropertyChanging();
					this._pt_TC = value;
					this.SendPropertyChanged("pt_TC");
					this.Onpt_TCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Password", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string pt_Password
		{
			get
			{
				return this._pt_Password;
			}
			set
			{
				if ((this._pt_Password != value))
				{
					this.Onpt_PasswordChanging(value);
					this.SendPropertyChanging();
					this._pt_Password = value;
					this.SendPropertyChanged("pt_Password");
					this.Onpt_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_NameSurname", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string pt_NameSurname
		{
			get
			{
				return this._pt_NameSurname;
			}
			set
			{
				if ((this._pt_NameSurname != value))
				{
					this.Onpt_NameSurnameChanging(value);
					this.SendPropertyChanging();
					this._pt_NameSurname = value;
					this.SendPropertyChanged("pt_NameSurname");
					this.Onpt_NameSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Adres", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string pt_Adres
		{
			get
			{
				return this._pt_Adres;
			}
			set
			{
				if ((this._pt_Adres != value))
				{
					this.Onpt_AdresChanging(value);
					this.SendPropertyChanging();
					this._pt_Adres = value;
					this.SendPropertyChanged("pt_Adres");
					this.Onpt_AdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Tel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string pt_Tel
		{
			get
			{
				return this._pt_Tel;
			}
			set
			{
				if ((this._pt_Tel != value))
				{
					this.Onpt_TelChanging(value);
					this.SendPropertyChanging();
					this._pt_Tel = value;
					this.SendPropertyChanged("pt_Tel");
					this.Onpt_TelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Cinsiyet", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string pt_Cinsiyet
		{
			get
			{
				return this._pt_Cinsiyet;
			}
			set
			{
				if ((this._pt_Cinsiyet != value))
				{
					this.Onpt_CinsiyetChanging(value);
					this.SendPropertyChanging();
					this._pt_Cinsiyet = value;
					this.SendPropertyChanged("pt_Cinsiyet");
					this.Onpt_CinsiyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Dog_Tarih", DbType="Date NOT NULL")]
		public System.DateTime pt_Dog_Tarih
		{
			get
			{
				return this._pt_Dog_Tarih;
			}
			set
			{
				if ((this._pt_Dog_Tarih != value))
				{
					this.Onpt_Dog_TarihChanging(value);
					this.SendPropertyChanging();
					this._pt_Dog_Tarih = value;
					this.SendPropertyChanged("pt_Dog_Tarih");
					this.Onpt_Dog_TarihChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_AnneAdi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string pt_AnneAdi
		{
			get
			{
				return this._pt_AnneAdi;
			}
			set
			{
				if ((this._pt_AnneAdi != value))
				{
					this.Onpt_AnneAdiChanging(value);
					this.SendPropertyChanging();
					this._pt_AnneAdi = value;
					this.SendPropertyChanged("pt_AnneAdi");
					this.Onpt_AnneAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_BabaAdi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string pt_BabaAdi
		{
			get
			{
				return this._pt_BabaAdi;
			}
			set
			{
				if ((this._pt_BabaAdi != value))
				{
					this.Onpt_BabaAdiChanging(value);
					this.SendPropertyChanging();
					this._pt_BabaAdi = value;
					this.SendPropertyChanged("pt_BabaAdi");
					this.Onpt_BabaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_KanGrubu", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string pt_KanGrubu
		{
			get
			{
				return this._pt_KanGrubu;
			}
			set
			{
				if ((this._pt_KanGrubu != value))
				{
					this.Onpt_KanGrubuChanging(value);
					this.SendPropertyChanging();
					this._pt_KanGrubu = value;
					this.SendPropertyChanged("pt_KanGrubu");
					this.Onpt_KanGrubuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_Meslek", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string pt_Meslek
		{
			get
			{
				return this._pt_Meslek;
			}
			set
			{
				if ((this._pt_Meslek != value))
				{
					this.Onpt_MeslekChanging(value);
					this.SendPropertyChanging();
					this._pt_Meslek = value;
					this.SendPropertyChanged("pt_Meslek");
					this.Onpt_MeslekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_SigortaTuru", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string pt_SigortaTuru
		{
			get
			{
				return this._pt_SigortaTuru;
			}
			set
			{
				if ((this._pt_SigortaTuru != value))
				{
					this.Onpt_SigortaTuruChanging(value);
					this.SendPropertyChanging();
					this._pt_SigortaTuru = value;
					this.SendPropertyChanged("pt_SigortaTuru");
					this.Onpt_SigortaTuruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_ResimUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pt_ResimUrl
		{
			get
			{
				return this._pt_ResimUrl;
			}
			set
			{
				if ((this._pt_ResimUrl != value))
				{
					this.Onpt_ResimUrlChanging(value);
					this.SendPropertyChanging();
					this._pt_ResimUrl = value;
					this.SendPropertyChanged("pt_ResimUrl");
					this.Onpt_ResimUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PastExamine", Storage="_PastExamines", ThisKey="pt_ID", OtherKey="pt_ID")]
		public EntitySet<PastExamine> PastExamines
		{
			get
			{
				return this._PastExamines;
			}
			set
			{
				this._PastExamines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PastExamines(PastExamine entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_PastExamines(PastExamine entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
}
#pragma warning restore 1591
